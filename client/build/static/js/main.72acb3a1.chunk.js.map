{"version":3,"sources":["components/layout/SignedInLinks.js","components/layout/Navbar.js","components/dashboard/signed-in-dashboard/Customers.js","components/dashboard/signed-in-dashboard/FeaturedMovie.js","components/dashboard/signed-in-dashboard/SignedInDashboard.js","components/dashboard/Dashboard.js","components/auth/AlreadyHave.js","components/auth/SignUp.js","components/auth/SignIn.js","components/auth/settings.js","App.js","serviceWorker.js","index.js"],"names":["SignedInLinks","class","to","className","Navbar","Customers","useState","movieDetails","useEffect","console","log","src","movieImg","style","width","height","netflixImg","FeaturedMovie","featuredMedia","setFeaturedMedia","a","Axios","get","then","response","data","results","axiosRes","getApi","picture","name","locations","icon","SignedInDashboard","id","onSubmit","type","placeholder","onClick","Dashboard","dashboard","AlreadyHave","SignUp","signUpState","setSignUpState","handleChange","e","target","state","value","preventDefault","password","confirmpassword","for","onChange","SignIn","Settings","firstName","lastName","email","subscriptions","country","accountState","handleEditClick","handleSubmit","select","document","getElementById","classList","add","colorForm","contains","remove","parentNode","display","map","subscription","onMouseOver","onMouseOut","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.72acb3a1.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedInLinks = () => {\r\n  return(\r\n\r\n\r\n    <ul class=\"right\">\r\n      <li>\r\n        <NavLink to=\"/settings\">\r\n            <div className=\"cog-container\">\r\n              <i class=\"material-icons settings-cog\">settings</i>\r\n            </div>\r\n        </NavLink>\r\n      </li>\r\n\r\n      <li><NavLink to=\"/settings\" className=\"btn btn-floating lighten-1 account-button\">ZZ</NavLink></li>\r\n\r\n\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default SignedInLinks\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\n\r\nconst Navbar = () => {\r\n  return(\r\n    <nav className=\"nav-wrapper\">\r\n        <Link className=\"brand-logo center title-logo primary-brand\" to=\"/\">Stream Simply</Link>\r\n        <SignedInLinks className=\"right\" />\r\n    </nav>\r\n  )\r\n}\r\n\r\n\r\nexport default Navbar\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nconst Customers = () => {\r\n\r\n  let [movieDetails, setMovieDetails] = useState(null)\r\n  let netflixImg = null\r\n  let movieImg = null\r\n  let finalImg = null\r\n\r\n    useEffect(() => {\r\n      console.log('Running fetch...');\r\n    }, [])\r\n\r\n\r\n\r\n  return(\r\n    <div>\r\n      {movieDetails &&\r\n          <div>\r\n            <img src={movieDetails.movieImg} style={{width:'200px', height:'200px'}}/>\r\n            <img src={movieDetails.netflixImg} />\r\n          </div>\r\n\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Customers\r\n","import React, {useState, useEffect} from 'react'\r\nimport Axios from 'axios'\r\n\r\nconst FeaturedMovie = () => {\r\n\r\n\r\n    let [featuredMedia, setFeaturedMedia] = useState(false)\r\n\r\n      useEffect(() => {\r\n        console.log('Running FM fetch...')\r\n\r\n\r\n        async function getApi() {\r\n          const axiosRes = await Axios.get('/getFeaturedMovie').then(response => {\r\n            return response.data.results[0]\r\n          })\r\n          setFeaturedMedia(axiosRes)\r\n          console.log(axiosRes);\r\n        }\r\n\r\n        getApi();\r\n\r\n\r\n      }, [])\r\n\r\n\r\n\r\n  return(\r\n    <div className=\"featured-movie\">\r\n      <p className=\"white-text center featured-title\">Featured Show</p>\r\n      {renderShow()}\r\n    </div>\r\n  )\r\n\r\n  function renderShow(){\r\n    if (!featuredMedia) return <p className=\"white-text\">'Loading media...'</p>\r\n    return (\r\n      <div className=\"featured-movie-block\">\r\n        <img className=\"featuredImg\" src={featuredMedia.picture} style={{width: '50vh', height: '40vh'}} />\r\n        <div className=\"title-and-joint-holder\">\r\n          <h6 className=\"white-text featured-media-title center\">{featuredMedia.name}</h6>\r\n          <div className=\"joint-holder\">\r\n            <div className=\"genres-div\">\r\n              <h5 className=\"featured-media-genres-title\">Genres</h5>\r\n              <ul className=\"white-text\">\r\n                <li>Comedy</li>\r\n                <li>Action</li>\r\n                <li>Drama</li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"available-on-div center\">\r\n              <h5 className=\"featured-media-genres-title\">Available On</h5>\r\n              <img src={featuredMedia.locations[0].icon} />\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div>hello</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default FeaturedMovie\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport Customers from './Customers'\r\nimport FeaturedMovie from './FeaturedMovie.js'\r\n\r\nconst SignedInDashboard = () => {\r\n\r\n\r\n\r\n    return(\r\n      <div>\r\n        <form id=\"form-id\" onSubmit={''}>\r\n\r\n          <div id=\"search-div\" className=\"container\">\r\n           <input type='text' className=\"black-text\" id='dashboard-search' placeholder=\"Search movie/show...\"/>\r\n             <i class=\"material-icons left search-button-icon search-icon-dashboard grey-text text-darken-3\" onClick={''}>search</i>\r\n          </div>\r\n          <FeaturedMovie />\r\n\r\n          <Customers />\r\n        </form>\r\n      </div>\r\n\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default SignedInDashboard\r\n","import React from 'react'\r\nimport SignedOutDashboard from './SignedOutDashboard'\r\nimport SignedInDashboard from './signed-in-dashboard/SignedInDashboard'\r\n\r\nconst Dashboard = () => {\r\n  const signedIn = true\r\n  let dashboard\r\n  if (signedIn === true) {\r\n    dashboard = () => {\r\n      return (\r\n        <SignedInDashboard />\r\n      )\r\n    }\r\n  } else {\r\n    dashboard = () => {\r\n      return(\r\n        <SignedOutDashboard />\r\n      )\r\n    }\r\n  }\r\n  \r\n  return(\r\n    <div className=\"container\">\r\n      {dashboard()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","import React from 'react'\r\n\r\n\r\nconst AlreadyHave = () => {\r\n  return(\r\n    <div className=\"padding-top\">\r\n      <h5 className=\"white-text\">Already have an Account?</h5>\r\n      <a class=\"waves-effect waves-light btn signup-btn\">Login</a>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AlreadyHave\r\n","import React, { Component, useState } from 'react'\r\nimport AlreadyHave from './AlreadyHave'\r\n\r\n\r\nconst SignUp = () => {\r\n\r\n\r\n\r\n  const [signUpState, setSignUpState] = useState();\r\n  let getState = (signupState) => {\r\n    return signUpState\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (signUpState.password === signUpState.confirmpassword) {\r\n      console.log(signUpState);\r\n      console.log(e);\r\n    } else {\r\n      console.log('password error');\r\n    }\r\n  }\r\n  console.log(signUpState);\r\n\r\n  const handleChange = (e) => {\r\n    let id = e.target.id\r\n    let state = getState()\r\n    console.log(state.id);\r\n    console.log(id);\r\n    setSignUpState({\r\n      ...signUpState,\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n\r\n\r\n    return(\r\n      <div className=\"container\">\r\n        <form onSubmit={handleSubmit} className=\"signup\">\r\n          <div className=\"title-header\">\r\n            <h5 className=\"white-text text-darken-1\">Sign Up</h5>\r\n            <i class=\"material-icons white-text arrow-icon\">arrow_forward</i>\r\n            <h5 className=\"grey-text text-darken-1 search-h5\">Search</h5>\r\n            <i class=\"material-icons grey-text search-icon\">search</i>\r\n\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label for=\"email\">Email</label>\r\n            <input className=\"white-text\" type=\"email\" id=\"email\" onChange={handleChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label for=\"password\">Password</label>\r\n            <input className=\"white-text\" type=\"password\" id=\"password\" onChange={handleChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label for=\"confirmpassword\">Confirm Password</label>\r\n            <input className=\"white-text\" type=\"password\" id=\"confirmpassword\" onChange={handleChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn z-depth-0 signup-btn\">Continue</button>\r\n          </div>\r\n        </form>\r\n        <AlreadyHave />\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\nexport default SignUp\r\n","import React, { Component, useState } from 'react'\r\n\r\n\r\nconst SignIn = () => {\r\n\r\n\r\n\r\n  const [signUpState, setSignUpState] = useState();\r\n  let getState = (signupState) => {\r\n    return signUpState\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (signUpState.password === signUpState.confirmpassword) {\r\n      console.log(signUpState);\r\n      console.log(e);\r\n    } else {\r\n      console.log('password error');\r\n    }\r\n  }\r\n  console.log(signUpState);\r\n\r\n  const handleChange = (e) => {\r\n    let id = e.target.id\r\n    let state = getState()\r\n    console.log(state.id);\r\n    console.log(id);\r\n    setSignUpState({\r\n      ...signUpState,\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n\r\n\r\n    return(\r\n      <div className=\"container\">\r\n        <form onSubmit={handleSubmit} className=\"signup\">\r\n          <div className=\"title-header\">\r\n            <h5 className=\"white-text text-darken-1\">Login</h5>\r\n            <i class=\"material-icons white-text arrow-icon\">arrow_forward</i>\r\n            <h5 className=\"grey-text text-darken-1 search-h5\">Search</h5>\r\n            <i class=\"material-icons grey-text search-icon\">search</i>\r\n\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label for=\"email\">Email</label>\r\n            <input className=\"white-text\" type=\"email\" id=\"email\" onChange={handleChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label for=\"password\">Password</label>\r\n            <input className=\"white-text\" type=\"password\" id=\"password\" onChange={handleChange}/>\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <button className=\"btn z-depth-0 signup-btn\">Continue</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\nexport default SignIn\r\n","import React, { useState, useEffect} from 'react'\r\n\r\n\r\nconst Settings = () => {\r\n\r\n  const [accountState, setAccountState] = useState({\r\n    firstName: \"Chase\",\r\n    lastName: \"Van Halen\",\r\n    email: \"chase.vanhalen88@gmail.com\",\r\n    subscriptions: ['Netflix', 'Amazon', 'Hulu'],\r\n    country: 'US'\r\n  })\r\n\r\n  console.log(accountState);\r\n\r\n\r\n  const handleMouseOver = () => {\r\n    let countryExplainer = document.getElementById('explain-country')\r\n    countryExplainer.classList.remove('hide')\r\n    }\r\n\r\n  const handleMouseOut = () => {\r\n      let countryExplainer = document.getElementById('explain-country')\r\n      countryExplainer.classList.add('hide')\r\n    }\r\n\r\n  const handleColorSave = () => {\r\n      let countryExplainer = document.getElementById('explain-country')\r\n      countryExplainer.classList.add('hide')\r\n    }\r\n\r\n  const handleEditClick = () => {\r\n\r\n  }\r\n\r\n  const handleClick = (e) => {\r\n    console.log('clicked', e.target.parentNode.parentNode.classList.add('hide'));\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    let select = document.getElementById('select-input').value;\r\n    console.log(select)\r\n    let colorForm = document.getElementById('change-color')\r\n    colorForm.classList.add('hide')\r\n  }\r\n\r\n  const handleColorClick = () => {\r\n    let colorForm = document.getElementById('change-color')\r\n    console.log(colorForm)\r\n    colorForm.classList.contains('hide') ? colorForm.classList.remove('hide') : colorForm.classList.add('hide')\r\n  }\r\n\r\n\r\n  return(\r\n    <div className=\"container settings-container\">\r\n    <div className=\"account-block\">\r\n      <div className=\"btn btn-floating lighten-1 account-button-big\" onClick={handleColorClick}>CV</div>\r\n      <div className=\"info-holder\">\r\n        <form id=\"change-color\" className=\"change-color hide\" onSubmit={handleSubmit}>\r\n          <div className=\"form-container\">\r\n            <label for=\"cars\">Select Your Color Theme:</label>\r\n            <i class=\"material-icons right close-icon\" onClick={handleClick}>close</i>\r\n\r\n            <select style={{display: \"inline-block\"}} name=\"cars\" id=\"select-input\">\r\n              <option className=\"yellow-color\" value=\"#cb861a\">Deep-yellow</option>\r\n              <option className=\"red-color white-text\" value=\"#460b0b\">Myrtle</option>\r\n              <option  className=\"light-color\" value=\"#ffdb84\">Light-yellow</option>\r\n            </select>\r\n            <div className=\"btn save-color right\" onClick={handleSubmit}>Save</div>\r\n          </div>\r\n\r\n        </form>\r\n          <h6 className=\"white-text featured-media-title\">{accountState.firstName} {accountState.lastName}\r\n              <i class=\"material-icons edit-icon\" onClick={handleEditClick}>edit</i>\r\n          </h6>\r\n          <div className=\"account-info-holder\">\r\n            <h5 className=\"settings-titles\">Email:</h5>\r\n            <div className=\"white-text center email-field\">{accountState.email}</div>\r\n            <i class=\"material-icons edit-icon white-text field-icon\" onClick={handleEditClick}>edit</i>\r\n\r\n          </div>\r\n          <div className=\"account-info-holder\">\r\n            <h5 className=\"settings-titles\">Subscriptions:</h5>\r\n            {accountState.subscriptions.map(subscription => {\r\n              return(\r\n                <div className=\"white-text center email-field\">{subscription}</div>\r\n              )\r\n            }\r\n            )}\r\n\r\n\r\n          </div>\r\n          <div className=\"account-info-holder\">\r\n            <h5 className=\"settings-titles\">Country:</h5>\r\n            <div className=\"white-text center email-field\">{accountState.country}</div>\r\n            <div className=\"extra-info center\" onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>?</div>\r\n            <i class=\"material-icons edit-icon white-text field-icon\" onClick={handleEditClick}>edit</i>\r\n            <div id=\"explain-country\" className=\"hide country-explainer\">Display availability for this country</div>\r\n\r\n          </div>\r\n          <div>\r\n            <div className=\"change-password\">change password</div>\r\n          </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Settings\r\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport Settings from './components/auth/settings'\n\nfunction App() {\n  return (\n\n  <BrowserRouter>\n    <div className=\"App\">\n      <Navbar />\n      <Route exact path=\"/\" component={Dashboard} />\n      <Route  path=\"/signup\" component={SignUp} />\n      <Route path='/signin' component={SignIn} />\n      <Route path='/settings' component={Settings} />\n    </div>\n  </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}